
==================== FINAL INTERFACE ====================
2017-11-08 12:44:48.036498 UTC

interface main@main:Example 8002
  interface hash: cb03bf9f813d8e8dec4e49ac2568b9fa
  ABI hash: 4218dae53cd0f3e11a5e433adb429619
  export-list hash: aeacb5cff1c4e09a33a14c39284f891c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ae5613e32a430faf7f5670c4d8c364a6
  sig of: Nothing
  used TH splices: False
  where
exports:
  Example.bouncingBall
  Example.example
  Example.joinDS
  Example.movingBall
  Example.rotatingSquare
  Example.runExample
  Example.staticBall
module dependencies: Animate Ansi Render Shapes Signal
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 time-1.6.0.1@time-1.6.0.1
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Float 33e2b9ffe427edd6a5c2fd6a3b26703c
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Animate f64d9d37ba0e0800fb8fbfe58da30885
  exports: b404bf15d369780fcdfbca87c4758eda
  animate a7db9a80844e265030065d6f3d99ae9c
import  -/  Render 3b9dac36f3c6919f2473aa494cee54ec
  exports: 42196c7712c814c6bac2d5299bac88ac
  defaultWindow 06da54a4d310e93a617f0e1bd2bf6e2b
import  -/  Shapes 793602c9da782eb18340d30c91b2c33b
  exports: 86eff6cedd199d63d8d2bc7976a8b0bf
  <+> 3bcf87a778a82a13654397f62be954d4
  Drawing 52546a9344b9aa58b9634927b74465a0
  Point 2dfdfe028b9bf413c4c2e5e51bc61d7a
  Shape 5f499c88e0d9ccf378081f10a5b27b9f
  Transform 5f9c307993793668d0a403a86c8fe6d9
  circle ebc7902a8ea65f52192c13cb54428176
  point b9ad6510f5624372d13376a154c51eee
  rotate 326c2c562becf0d4c57f9f35f487c7ea
  scale 0ba268dfde43403987a5f0c744521b3d
  square 237498c96346a23b943b01eb5af70ccf
  translate d8159a5656d940d0de02d012e5415f9a
import  -/  Signal 8f3891611e92f8e6ad846bb438bc6c31
  exports: 13c3f0971a2b2277dd8e92b500f82e2f
  $$ 912658aabf7094b621c593386476040b
  Signal 6cb891b622866e0c718f171c518abac1
  constS 8f5d913aa0de182202c27d7982c7b33e
  mapS d6bae8af6a78d0e2b34043087cd1635d
  timeS 3af51182133b8b9379644115e0f5137f
6ce0f3ec767d642bebbefa741a9355a7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Example.$trModule2
                   Example.$trModule1) -}
8a9e7ce7261fe7c4202b8d7969ebdc5a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Example"#) -}
68b11f4d331ec67bf25602cbde84726d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
3ce7acf97a7e4671bf33ad700f7bd0b9
  bouncingBall :: Signal.Signal Shapes.Drawing
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>m2,
     Unfolding: InlineRule (0, True, True)
                Example.bouncingBall1
                  `cast`
                (Sym (Signal.N:Signal[0]) <[(Shapes.Transform,
                                             Shapes.Shape)]>_N) -}
0c8a28fe896380302cf09774a13525ab
  bouncingBall1 :: Signal.Time -> [(Shapes.Transform, Shapes.Shape)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Signal.Time) ->
                 GHC.Types.:
                   @ (Shapes.Transform, Shapes.Shape)
                   (Example.bouncingBall2 eta)
                   (GHC.Types.[] @ (Shapes.Transform, Shapes.Shape))) -}
284e231169df95b665e532ed9fe69acc
  bouncingBall2 :: Signal.Time -> (Shapes.Transform, Shapes.Shape)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Signal.Time) ->
                 (Shapes.Compose
                    (Shapes.Translate
                       (Shapes.Vector
                          (case w of wild1 { GHC.Types.D# y ->
                           GHC.Types.D# (GHC.Prim.sinDouble# (GHC.Prim.+## y y)) })
                          (case w of wild1 { GHC.Types.D# y ->
                           GHC.Types.D# (GHC.Prim.sinDouble# (GHC.Prim.*## 3.0## y)) })))
                    Example.bouncingBall3,
                  Shapes.Circle)) -}
7efe8c5a444cb2c643d4e0d3279cd93f
  bouncingBall3 :: Shapes.Transform
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Shapes.Scale Example.bouncingBall4) -}
a530a1542e0c2039aa9a486f5f048b08
  bouncingBall4 :: Shapes.Vector
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Shapes.Vector
                   Example.bouncingBall5
                   Example.bouncingBall5) -}
4093db87c1cd836bbb6ccc02d5e7ab26
  bouncingBall5 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.3##) -}
887a485bc0579f9457efb693ebb90e6b
  example :: Signal.Signal [(Shapes.Transform, Shapes.Shape)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>m2,
     Unfolding: InlineRule (0, True, True)
                Example.example1
                  `cast`
                (Sym (Signal.N:Signal[0]) <[(Shapes.Transform,
                                             Shapes.Shape)]>_N) -}
251074e2963a57162eb85680ede8d580
  example1 :: Signal.Time -> [(Shapes.Transform, Shapes.Shape)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Signal.Time) ->
                 GHC.Types.:
                   @ (Shapes.Transform, Shapes.Shape)
                   (Example.bouncingBall2 eta)
                   (GHC.Types.:
                      @ (Shapes.Transform, Shapes.Shape)
                      (Shapes.Compose Example.example2 (Shapes.rotate eta),
                       Shapes.Square)
                      (GHC.Types.[] @ (Shapes.Transform, Shapes.Shape)))) -}
518de49cc5a84200d55066c2838c4bac
  example2 :: Shapes.Transform
  {- HasNoCafRefs, Strictness: m4,
     Unfolding: (Shapes.Compose Example.example7 Example.example3) -}
494b184cfcbbdfa792673ca422daef1f
  example3 :: Shapes.Transform
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Shapes.Translate Example.example4) -}
a6a834d47b7b8e12379a551a7ee6e01f
  example4 :: Shapes.Vector
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Shapes.Vector Example.example6 Example.example5) -}
56236c3b2deb67d5d91a4661f71e5d25
  example5 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.4##) -}
16c760334246436efb7cb584a6ace070
  example6 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.2##) -}
acf386953c890b08d39fb3427134711f
  example7 :: Shapes.Transform
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Shapes.Scale Example.example8) -}
42d2aadaefbee737bea653f49c77de99
  example8 :: Shapes.Vector
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Shapes.Vector Example.example9 Example.example9) -}
c24b938195ddefbcedb6863463edbfb8
  example9 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.5##) -}
9d03d782c4b408eeeaa27852b0f4248e
  joinDS ::
    Signal.Signal [a] -> Signal.Signal [a] -> Signal.Signal [a]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U)><L,1*C1(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Example.joinDS1
                  `cast`
                (forall (a :: <*>_N).
                 <Signal.Signal [a]>_R
                 ->_R <Signal.Signal [a]>_R
                 ->_R Sym (Signal.N:Signal[0]) <[a]>_N) -}
48d5ac890c9ec44f6246f3ef457b89bf
  joinDS1 ::
    Signal.Signal [a] -> Signal.Signal [a] -> Signal.Time -> [a]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U)><L,1*C1(U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (s0 :: Signal.Signal [a])
                   (s1 :: Signal.Signal [a])
                   (eta :: Signal.Time) ->
                 GHC.Base.augment
                   @ a
                   (\ @ b (c :: a -> b -> b)[OneShot] (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ a
                      @ b
                      c
                      n
                      (s0 `cast` (Signal.N:Signal[0] <[a]>_N) eta))
                   (s1 `cast` (Signal.N:Signal[0] <[a]>_N) eta)) -}
cf2b2eb432c97f887ad80df6513b3cb7
  movingBall :: Signal.Signal Shapes.Drawing
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U(U)>m2,
     Unfolding: InlineRule (0, True, True)
                Example.movingBall1
                  `cast`
                (Sym (Signal.N:Signal[0]) <[(Shapes.Transform,
                                             Shapes.Shape)]>_N) -}
7a29fcc5ab1895c50f2743f55873e08c
  movingBall1 :: Signal.Time -> [(Shapes.Transform, Shapes.Shape)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U(U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Signal.Time) ->
                 GHC.Types.:
                   @ (Shapes.Transform, Shapes.Shape)
                   (Shapes.Compose
                      (Shapes.Translate
                         (Shapes.Vector
                            Example.movingBall_x
                            (case eta of wild1 { GHC.Types.D# y ->
                             GHC.Types.D# (GHC.Prim.sinDouble# (GHC.Prim.*## 3.0## y)) })))
                      Example.bouncingBall3,
                    Shapes.Circle)
                   (GHC.Types.[] @ (Shapes.Transform, Shapes.Shape))) -}
8489376acf4671e3f3b72939fcf26460
  movingBall_x :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
096e73ed791795ddeb445acc47aaa27f
  rotatingSquare :: Signal.Signal Shapes.Drawing
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>m2,
     Unfolding: InlineRule (0, True, True)
                Example.rotatingSquare1
                  `cast`
                (Sym (Signal.N:Signal[0]) <[(Shapes.Transform,
                                             Shapes.Shape)]>_N) -}
020b4831be2b5509f4b5180963de0237
  rotatingSquare1 ::
    Signal.Time -> [(Shapes.Transform, Shapes.Shape)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Signal.Time) ->
                 GHC.Types.:
                   @ (Shapes.Transform, Shapes.Shape)
                   (Shapes.Compose Example.example2 (Shapes.rotate eta),
                    Shapes.Square)
                   (GHC.Types.[] @ (Shapes.Transform, Shapes.Shape))) -}
0f90dd4e68f51e9165fbff9347cb55dc
  runExample :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Example.runExample1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
7a3148effd2de1302d42739b144b623f
  runExample1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Animate.$wanimate
                   Render.defaultWindow
                   0.0##
                   15.0##
                   Example.example1
                     `cast`
                   (Sym (Signal.N:Signal[0]) <[(Shapes.Transform, Shapes.Shape)]>_N)
                   w4) -}
a0af07fa5515e1b532347d9d7f5b22e2
  staticBall :: Signal.Signal Shapes.Drawing
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Example.staticBall1
                  `cast`
                (Sym (Signal.N:Signal[0]) <[(Shapes.Transform,
                                             Shapes.Shape)]>_N) -}
a61bf59ccc92bf97f2b09e2971dfb0dd
  staticBall1 :: Signal.Time -> [(Shapes.Transform, Shapes.Shape)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Signal.Time) -> Example.staticBall_ball) -}
72648b7ae942adf2175bb0320bdb0fb5
  staticBall2 :: (Shapes.Transform, Shapes.Shape)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Example.example2, Shapes.Circle)) -}
3747ed2b45316363aa0dd2e48ea4deab
  staticBall_ball :: [(Shapes.Transform, Shapes.Shape)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Shapes.Transform, Shapes.Shape)
                   Example.staticBall2
                   (GHC.Types.[] @ (Shapes.Transform, Shapes.Shape))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

