
==================== FINAL INTERFACE ====================
2017-11-08 11:05:32.219477 UTC

interface main@main:Animate 8002
  interface hash: 1c89574ddec1536edd290952be0b7019
  ABI hash: f64d9d37ba0e0800fb8fbfe58da30885
  export-list hash: b404bf15d369780fcdfbca87c4758eda
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ae5613e32a430faf7f5670c4d8c364a6
  sig of: Nothing
  used TH splices: False
  where
exports:
  Animate.animate
module dependencies: Ansi Render Shapes Signal
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 time-1.6.0.1@time-1.6.0.1
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Ansi 5069be5752c46629f09beb0aad93fff9
  exports: 07ee948a2c7e66974c9bb24793e9c44a
  cls eaf1145f54fc8fb8bf77f4ae0e558dbd
import  -/  Render 3b9dac36f3c6919f2473aa494cee54ec
  exports: 42196c7712c814c6bac2d5299bac88ac
  Window 4b1def09578e155498dec5d846928f94
  render 3e3ba071354303993c95e46b895c2bef
  samples 6a6dc288dccb5925f0d88900a9ff92f3
import  -/  Shapes 793602c9da782eb18340d30c91b2c33b
  exports: 86eff6cedd199d63d8d2bc7976a8b0bf
  Drawing 52546a9344b9aa58b9634927b74465a0
import  -/  Signal 8f3891611e92f8e6ad846bb438bc6c31
  exports: 13c3f0971a2b2277dd8e92b500f82e2f
  Signal 6cb891b622866e0c718f171c518abac1
  Time 6de611a6573e938284c52c1e375785ec
  sample 8665d947927438ff730d66c979285b3d
import  -/  unix-2.7.2.1@unix-2.7.2.1:System.Posix b3c02822c489e98bf419b44676ecb95b
import  -/  unix-2.7.2.1@unix-2.7.2.1:System.Posix.Unistd 2977614966d8fd73b1e2268b6be897ea
bf6c16ef1ea62033905edf3a3bff9b4a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Animate.$trModule2
                   Animate.$trModule1) -}
c4678bbb12d524fc43bbe4e092557d69
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Animate"#) -}
dcaf85b6d84e71a1c000564639db8766
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
a25fba9b7d9d04619b6390138141dae4
  $wanimate ::
    Render.Window
    -> GHC.Prim.Double#
    -> GHC.Prim.Double#
    -> Signal.Signal Shapes.Drawing
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U(U(U),U(U)),U(U(U),U(U)),U(U(U),U(U)))><S,U><S,U><L,C(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (w :: Render.Window)
                   (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Prim.Double#)
                   (w1 :: Signal.Signal Shapes.Drawing)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case {__pkg_ccall base-4.9.1.0 rintDouble GHC.Prim.Double#
                                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 GHC.Prim.Double# #)}
                        (GHC.Prim.*## (GHC.Prim.-## ww1 ww) 10.0##)
                        GHC.Prim.realWorld# of wild { (#,#) ds2 ds3 ->
                 let {
                   ww2 :: GHC.Prim.Int# = GHC.Prim.double2Int# ds3
                 } in
                 letrec {
                   go :: [GHC.Types.Double]
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 2, Strictness: <S,1*U><S,U> -}
                   = \ (ds :: [GHC.Types.Double])
                       (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case ds of wild1 {
                       [] -> (# eta, GHC.Tuple.() #)
                       : y ys
                       -> case GHC.IO.Handle.Text.hPutStr2
                                 GHC.IO.Handle.FD.stdout
                                 Animate.animate3
                                 GHC.Types.False
                                 eta of ds1 { (#,#) ipv ipv1 ->
                          case w of ww3 { Render.Window ww4 ww5 ww6 ->
                          case ww6 of ww7 { (,) ww8 ww9 ->
                          case ww9 of ww10 { GHC.Types.I# ww11 ->
                          case (Render.$wrender
                                  ww4
                                  ww5
                                  ww8
                                  ww11
                                  (w1 `cast` (Signal.N:Signal[0] <Shapes.Drawing>_N) y))
                                 `cast`
                               (GHC.Types.N:IO[0] <()>_R)
                                 ipv of ds4 { (#,#) ipv2 ipv3 ->
                          case System.Posix.Unistd.nanosleep1
                                 Animate.animate2
                                 ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                          go ys ipv4 } } } } } } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# 0# ww2) of wild1 {
                   GHC.Types.False -> go (GHC.Types.[] @ GHC.Types.Double) w2
                   GHC.Types.True
                   -> case GHC.Prim./##
                             (GHC.Prim.-## ww1 ww)
                             (GHC.Prim.int2Double# (GHC.Prim.-# ww2 1#)) of wild3 { DEFAULT ->
                      case GHC.Real.$wnumericEnumFromThen
                             @ GHC.Types.Double
                             GHC.Float.$fFractionalDouble
                             (GHC.Types.D# ww)
                             (GHC.Types.D# (GHC.Prim.+## ww wild3)) of ww3 { (#,#) ww4 ww5 ->
                      go
                        (GHC.List.$wunsafeTake
                           @ GHC.Types.Double
                           ww2
                           (GHC.Types.: @ GHC.Types.Double ww4 ww5))
                        w2 } } } }) -}
a7db9a80844e265030065d6f3d99ae9c
  animate ::
    Render.Window
    -> Signal.Time
    -> Signal.Time
    -> Signal.Signal Shapes.Drawing
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U(U(U(U),U(U)),U(U(U),U(U)),U(U(U),U(U)))><S(S),1*U(U)><S(S),1*U(U)><L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Animate.animate1
                  `cast`
                (<Render.Window>_R
                 ->_R <Signal.Time>_R
                 ->_R <Signal.Time>_R
                 ->_R <Signal.Signal Shapes.Drawing>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
34bb3cb75c01cebe63a5fcebb9fd4f07
  animate1 ::
    Render.Window
    -> Signal.Time
    -> Signal.Time
    -> Signal.Signal Shapes.Drawing
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U(U(U),U(U)),U(U(U),U(U)),U(U(U),U(U)))><S(S),1*U(U)><S(S),1*U(U)><L,C(U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Render.Window)
                   (w1 :: Signal.Time)
                   (w2 :: Signal.Time)
                   (w3 :: Signal.Signal Shapes.Drawing)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { GHC.Types.D# ww1 ->
                 case w2 of ww2 { GHC.Types.D# ww3 ->
                 Animate.$wanimate w ww1 ww3 w3 w4 } }) -}
2eda8fc26bec40003a8a64ce2bc65532
  animate2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (70000000) -}
f08283d54a2844490caf4c829998c4da
  animate3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\ESC[2J"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

